version: '3.5'

services:
  app:
    image: whoami:01
    ports:
      - 81:8000
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        delay: 10s
        parallelism: 1
        failure_action: rollback
        order: start-first
      labels:
        - traefik.enable=true
        - traefik.backend=app
        - traefik.frontend.rule=Host:docker.local
        - traefik.frontend.priority=1
        - traefik.port=8000
        - traefik.docker.network=web
        - traefik.backend.healthcheck.path=/
        - traefik.backend.healthcheck.port=8000
        - traefik.backend.healthcheck.interval=1s
        - traefik.backend.healthcheck.hostname=docker.local
    networks:
      - web


  reverse-proxy:
    image: traefik
    command: 
      - "--api"
      - "--retry"
      - "--docker"
      - "--docker.swarmMode"
      - "--docker.domain=docker.local"
      - "--docker.watch"
      - "--docker.exposedbydefault=false"
      - "--docker.network=web"
      - "--forwardingTimeouts"
      - "--forwardingTimeouts.dialTimeout=1s"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        failure_action: rollback
      placement:
        constraints:
          - node.role == manager
    networks:
      - web
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  web:
    external: true
